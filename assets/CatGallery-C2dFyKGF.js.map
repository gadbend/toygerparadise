{"version":3,"file":"CatGallery-C2dFyKGF.js","sources":["../../src/components/ui/breadcrumb.tsx","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../src/components/CatGallery.tsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport { ChevronRight } from \"lucide-react\";\n\ninterface BreadcrumbItem {\n  label: string;\n  path: string;\n  isCategory?: boolean;\n}\n\nconst routeLabels: Record<string, string> = {\n  \"adoption\": \"Available Kittens\",\n  \"about-us\": \"About Us\",\n  \"contact\": \"Contact\",\n  \"breeds\": \"Cat Breeds\",\n  \"toyger\": \"Toyger\",\n  \"bengal\": \"Bengal\",\n  \"login\": \"Login\"\n};\n\nexport function Breadcrumb(): JSX.Element | null {\n  const location = useLocation();\n  const pathnames = location.pathname.split(\"/\").filter((x) => x);\n\n  if (location.pathname === \"/\") return null;\n\n  const breadcrumbs: BreadcrumbItem[] = pathnames.map((value, index) => {\n    const last = index === pathnames.length - 1;\n    const to = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n    const label = routeLabels[value] || value;\n\n    return {\n      label,\n      path: to,\n      isCategory: !last,\n    };\n  });\n\n  return (\n    <div className=\"py-4\">\n      <div className=\"container mx-auto\">\n        <ol className=\"flex flex-wrap items-center gap-2\">\n          <li>\n            <Link\n              to=\"/\"\n              className=\"text-gray-400 hover:text-amber-500 transition-colors px-3 py-1 rounded-md hover:bg-white/5\"\n            >\n              Home\n            </Link>\n          </li>\n          {breadcrumbs.map((item, index) => {\n            return (\n              <li key={item.path} className=\"flex items-center\">\n                <ChevronRight className=\"h-4 w-4 text-gray-400\" />\n                {item.isCategory ? (\n                  <Link\n                    to={item.path}\n                    className=\"text-gray-400 hover:text-amber-500 transition-colors px-3 py-1 rounded-md hover:bg-white/5\"\n                  >\n                    {item.label}\n                  </Link>\n                ) : (\n                  <span className=\"text-amber-500 px-3 py-1\">{item.label}</span>\n                )}\n              </li>\n            );\n          })}\n        </ol>\n      </div>\n    </div>\n  );\n}\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import React, { useState, useEffect } from 'react';\nimport { getGalleryImages } from '../lib/galleryQueries';\nimport type { CatGalleryImage } from '../types/gallery';\nimport { useTranslation } from 'react-i18next';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface CatGalleryProps {\n  category: 'toyger' | 'bengal';\n}\n\nexport function CatGallery({ category }: CatGalleryProps) {\n  const { t } = useTranslation();\n  const [selectedImage, setSelectedImage] = useState<CatGalleryImage | null>(null);\n  const [images, setImages] = useState<CatGalleryImage[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const data = await getGalleryImages(category);\n        console.log('Fetched images:', data);\n        setImages(data);\n      } catch (err) {\n        console.error('Error fetching gallery images:', err);\n        setError('Failed to load images. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchImages();\n  }, [category]);\n\n  useEffect(() => {\n    const images = document.querySelectorAll(\"img[data-src]\");\n    const imageObserver = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const img = entry.target as HTMLImageElement;\n          img.src = img.dataset.src || \"\";\n          img.removeAttribute(\"data-src\");\n          observer.unobserve(img);\n        }\n      });\n    });\n\n    images.forEach(img => imageObserver.observe(img));\n    return () => imageObserver.disconnect();\n  }, [images]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gold\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-8 text-red-500\">\n        {error}\n      </div>\n    );\n  }\n\n  if (!images.length) {\n    return (\n      <div className=\"text-center py-8\">\n        No images available for this category.\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 p-4\">\n        {images.map((image, index) => (\n          <motion.div\n            key={image.id}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n            className=\"relative aspect-square overflow-hidden rounded-xl cursor-pointer group\"\n            onClick={() => setSelectedImage(image)}\n          >\n            <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-transparent to-black/50 z-10\"></div>\n            <img\n              data-src={image.image_url}\n              alt={image.title || `${category} cat`}\n              className=\"w-full h-full object-cover transform group-hover:scale-110 transition-transform duration-700 ease-out\"\n              onLoad={(e) => {\n                const img = e.target as HTMLImageElement;\n                img.classList.remove('opacity-0');\n              }}\n            />\n            {image.title && (\n              <div className=\"absolute bottom-0 left-0 right-0 p-4 z-20 transform translate-y-2 group-hover:translate-y-0 transition-transform duration-300\">\n                <h3 className=\"text-white text-lg font-medium drop-shadow-lg\">{image.title}</h3>\n                {image.description && (\n                  <p className=\"text-gray-200 text-sm mt-1 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                    {image.description}\n                  </p>\n                )}\n              </div>\n            )}\n          </motion.div>\n        ))}\n      </div>\n\n      <AnimatePresence>\n        {selectedImage && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\"\n            onClick={() => setSelectedImage(null)}\n          >\n            <motion.div\n              initial={{ scale: 0.9 }}\n              animate={{ scale: 1 }}\n              exit={{ scale: 0.9 }}\n              className=\"relative max-w-5xl w-full\"\n              onClick={e => e.stopPropagation()}\n            >\n              <button\n                className=\"absolute top-4 right-4 text-white hover:text-gold transition-colors z-10\"\n                onClick={() => setSelectedImage(null)}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n              <div className=\"relative aspect-[16/9] rounded-xl overflow-hidden\">\n                <img\n                  src={selectedImage.image_url}\n                  alt={selectedImage.title || `${category} cat`}\n                  className=\"w-full h-full object-contain\"\n                />\n              </div>\n              {selectedImage.title && (\n                <div className=\"mt-4 text-white\">\n                  <h3 className=\"text-2xl font-semibold\">{selectedImage.title}</h3>\n                  {selectedImage.description && (\n                    <p className=\"mt-2 text-gray-300\">{selectedImage.description}</p>\n                  )}\n                </div>\n              )}\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n}\n"],"names":["routeLabels","adoption","contact","breeds","toyger","bengal","login","Breadcrumb","location","useLocation","pathnames","pathname","split","filter","x","breadcrumbs","map","value","index","last","length","to","slice","join","label","path","isCategory","jsx","className","children","jsxRuntimeExports","jsxs","Link","item","ChevronRight","PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","React.cloneElement","cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","React.useEffect","PresenceContext","Provider","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","includes","get","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","has","isEveryExitComplete","isExitComplete","CatGallery","category","useTranslation","selectedImage","setSelectedImage","images","setImages","isLoading","setIsLoading","error","setError","useEffect","async","data","getGalleryImages","err","fetchImages","querySelectorAll","imageObserver","IntersectionObserver","entries","observer","entry","isIntersecting","img","target","src","removeAttribute","unobserve","observe","disconnect","image","motion","div","opacity","y","animate","transition","delay","onClick","image_url","alt","title","onLoad","e","classList","remove","description","exit","scale","stopPropagation","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"mappings":"yMASA,MAAMA,EAAsC,CAC1CC,SAAY,oBACZ,WAAY,WACZC,QAAW,UACXC,OAAU,aACVC,OAAU,SACVC,OAAU,SACVC,MAAS,SAGJ,SAASC,IACd,MAAMC,EAAWC,IACXC,EAAYF,EAASG,SAASC,MAAM,KAAKC,QAAQC,GAAMA,IAEzD,GAAsB,MAAtBN,EAASG,SAAyB,OAAA,KAEtC,MAAMI,EAAgCL,EAAUM,KAAI,CAACC,EAAOC,KACpD,MAAAC,EAAOD,IAAUR,EAAUU,OAAS,EACpCC,EAAK,IAAIX,EAAUY,MAAM,EAAGJ,EAAQ,GAAGK,KAAK,OAG3C,MAAA,CACLC,MAHYxB,EAAYiB,IAAUA,EAIlCQ,KAAMJ,EACNK,YAAaP,EACf,IAIAQ,OAAAA,EAAAA,IAAC,MAAI,CAAAC,UAAU,OACbC,WAAAF,IAAC,MAAI,CAAAC,UAAU,oBACbC,SAAAC,EAAAC,KAAC,KAAG,CAAAH,UAAU,oCACZC,SAAA,OAAC,KACC,CAAAA,SAAAC,EAAAH,IAACK,EAAA,CACCX,GAAG,IACHO,UAAU,6FACXC,SAAA,WAIFd,EAAYC,KAAI,CAACiB,EAAMf,MAEpBa,KAAC,KAAmB,CAAAH,UAAU,oBAC5BC,SAAA,GAACF,IAAAO,EAAA,CAAaN,UAAU,0BACvBK,EAAKP,WACJI,EAAAH,IAACK,EAAA,CACCX,GAAIY,EAAKR,KACTG,UAAU,6FAETC,SAAKI,EAAAT,QAGPG,EAAAA,IAAA,OAAA,CAAKC,UAAU,2BAA4BC,WAAKL,UAV5CS,EAAKR,cAmB5B,CC5DA,MAAMU,UAAwBC,EAAAA,UAC1B,uBAAAC,CAAwBC,GACd,MAAAC,EAAUC,KAAKC,MAAMC,SAASC,QACpC,GAAIJ,GAAWD,EAAUM,YAAcJ,KAAKC,MAAMG,UAAW,CACnD,MAAAC,EAAOL,KAAKC,MAAMK,QAAQH,QAC3BE,EAAAE,OAASR,EAAQS,cAAgB,EACjCH,EAAAI,MAAQV,EAAQW,aAAe,EACpCL,EAAKM,IAAMZ,EAAQa,UACnBP,EAAKQ,KAAOd,EAAQe,UAChC,CACe,OAAA,IACf,CAII,kBAAAC,GAAqB,CACrB,MAAAC,GACI,OAAOhB,KAAKC,MAAMZ,QAC1B,EAEA,SAAS4B,GAAS5B,SAAEA,EAAUe,UAAAA,IACpB,MAAAc,EAAKC,EAAAA,QACLC,EAAMC,EAAMA,OAAC,MACbhB,EAAOgB,EAAAA,OAAO,CAChBZ,MAAO,EACPF,OAAQ,EACRI,IAAK,EACLE,KAAM,KAEJS,MAAEA,GAAUC,EAAUA,WAACC,GAkC7B,OAxBAC,EAAAA,oBAAmB,KACf,MAAMhB,MAAEA,EAAOF,OAAAA,EAAAI,IAAQA,EAAKE,KAAAA,GAASR,EAAKF,QAC1C,GAAIC,IAAcgB,EAAIjB,UAAYM,IAAUF,EACxC,OACAa,EAAAjB,QAAQuB,QAAQC,YAAcT,EAC5B,MAAAU,EAAQC,SAASC,cAAc,SAerC,OAdIR,IACAM,EAAMN,MAAQA,GACTO,SAAAE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCACFhB,yEAEZT,wCACCF,qCACHI,sCACCE,0CAIL,KACMgB,SAAAE,KAAKI,YAAYP,EAAK,CAClC,GACF,CAACxB,IACIjB,EAAAA,IAAIQ,EAAiB,CAAES,YAAsBF,SAAUkB,EAAKd,QAASD,EAAMhB,SAAU+C,EAAkBC,aAAChD,EAAU,CAAE+B,SAChI,CClEA,MAAMkB,EAAgB,EAAGjD,WAAUkD,UAASnC,YAAWoC,iBAAgBC,SAAQC,wBAAuBC,WAC5F,MAAAC,EAAmBC,EAAYC,GAC/B5B,EAAKC,EAAAA,QACL4B,EAAyBC,eAAaC,IACvBL,EAAAM,IAAID,GAAS,GACnB,IAAA,MAAAE,KAAcP,EAAiBQ,SACtC,IAAKD,EACD,OAERX,GAAkBA,GAAgB,GACnC,CAACI,EAAkBJ,IAChBa,EAAUC,EAAAA,SAAQ,KAAO,CAC3BpC,KACAqB,UACAnC,YACAqC,SACAD,eAAgBO,EAChBQ,SAAWN,IACUL,EAAAM,IAAID,GAAS,GACvB,IAAML,EAAiBY,OAAOP,OAQ7CP,EACM,CAACe,KAAKC,SAAUX,GAChB,CAAC3C,EAAW2C,IAiBV5D,OAhBRmE,EAAAA,SAAQ,KACaV,EAAAe,SAAQ,CAACC,EAAGC,IAAQjB,EAAiBM,IAAIW,GAAK,IAAM,GACtE,CAACzD,IAKJ0D,EAAAA,WAAgB,MACX1D,IACIwC,EAAiBvC,MAClBmC,GACAA,GAAgB,GACrB,CAACpC,IACS,cAATuC,IACAtD,EAAWF,EAAGA,IAAC8B,EAAU,CAAEb,YAAsBf,cAE7CF,EAAGA,IAAC4E,EAAgBC,SAAU,CAAEvF,MAAO4E,EAAShE,YAAoB,EAEhF,SAASyD,IACL,WAAWmB,GACf,CCxDA,MAAMC,EAAeC,GAAUA,EAAMN,KAAO,GAC5C,SAASO,EAAa/E,GAClB,MAAMgF,EAAW,GAMV,OAJPC,EAAAA,SAASX,QAAQtE,GAAW8E,IACpBI,EAAAA,eAAeJ,IACfE,EAASG,KAAKL,EAAK,IAEpBE,CACX,CCgCA,MAAMI,EAAkB,EAAGpF,WAAUoD,SAAQF,WAAU,EAAMC,iBAAgBE,yBAAwB,EAAMC,OAAO,OAAQ+B,aAAY,MAClI,MAAOC,EAAiBC,GAAgBC,EAAYH,GAK9CI,EAAkBxB,EAAAA,SAAQ,IAAMc,EAAa/E,IAAW,CAACA,IAKzD0F,EAAcL,IAAcC,EAAkB,GAAKG,EAAgBtG,IAAI0F,GAIvEc,EAAkB3D,UAAO,GAMzB4D,EAAyB5D,SAAOyD,GAIhCI,EAAerC,GAAY,IAAM,IAAIoB,OAKpCkB,EAAgBC,GAAqBC,EAAAA,SAASP,IAC9CQ,EAAkBC,GAAuBF,EAAAA,SAASP,GACzDU,GAA0B,KACtBR,EAAgB7E,SAAU,EAC1B8E,EAAuB9E,QAAU2E,EAIjC,IAAA,IAASW,EAAI,EAAGA,EAAIH,EAAiB1G,OAAQ6G,IAAK,CAC9C,MAAM5B,EAAMK,EAAYoB,EAAiBG,IACpCV,EAAYW,SAAS7B,GAMtBqB,EAAa1B,OAAOK,IALU,IAA1BqB,EAAaS,IAAI9B,IACJqB,EAAAhC,IAAIW,GAAK,EAK9B,IAEL,CAACyB,EAAkBP,EAAYnG,OAAQmG,EAAYhG,KAAK,OAC3D,MAAM6G,EAAkB,GACxB,GAAId,IAAoBK,EAAgB,CAChC,IAAAU,EAAe,IAAIf,GAKvB,IAAA,IAASW,EAAI,EAAGA,EAAIH,EAAiB1G,OAAQ6G,IAAK,CACxC,MAAAtB,EAAQmB,EAAiBG,GACzB5B,EAAMK,EAAYC,GACnBY,EAAYW,SAAS7B,KACTgC,EAAAC,OAAOL,EAAG,EAAGtB,GAC1ByB,EAAgBpB,KAAKL,GACzB,CAeJ,MATa,SAATxB,GAAmBiD,EAAgBhH,SACpBiH,EAAAD,GAECL,EAAAnB,EAAayB,SACjCT,EAAkBN,EAKlB,CAYJ,MAAMiB,YAAEA,GAAgBxE,EAAAA,WAAWyE,GAC3B7G,OAAAA,EAAAA,IAAI8G,EAAAA,SAAU,CAAE5G,SAAUiG,EAAiB9G,KAAK2F,IAC1C,MAAAN,EAAMK,EAAYC,GAClB/D,IAAYsE,IAAcC,KAE1BG,IAAoBQ,GAClBP,EAAYW,SAAS7B,IAoBrB1E,OAAAA,MAAImD,EAAe,CAAElC,YAAsBmC,UAAUyC,EAAgB7E,UAAWoC,SAC9E,EACOE,OAAQrC,OAAY,EAAYqC,EAAQC,wBAA8CC,OAAYH,eAAgBpC,OAAY,EArBhI,KACP,IAAA8E,EAAagB,IAAIrC,GAIjB,OAHaqB,EAAAhC,IAAIW,GAAK,GAK1B,IAAIsC,GAAsB,EACbjB,EAAAvB,SAASyC,IACbA,IACqBD,GAAA,EAAA,IAE1BA,IACAJ,SAA0DA,IAC1DR,EAAoBN,EAAuB9E,SAC3CuE,IAAcE,SAA4DA,KAC1EpC,GAAkBA,IAAe,EAK0HnD,SAAU8E,GAASN,EAAG,KACzL,ECxJI,SAAAwC,GAAWC,SAAEA,IACEC,IAC7B,MAAOC,EAAeC,GAAoBpB,EAAAA,SAAiC,OACpEqB,EAAQC,GAAatB,EAAAA,SAA4B,KACjDuB,EAAWC,GAAgBxB,EAAAA,UAAS,IACpCyB,EAAOC,GAAY1B,EAAAA,SAAwB,MAsClD,OApCA2B,EAAAA,WAAU,KACYC,WACd,IACFJ,GAAa,GACbE,EAAS,MACH,MAAAG,QAAaC,EAAiBb,GAEpCK,EAAUO,SACHE,GAEPL,EAAS,iDAAgD,CACzD,QACAF,GAAa,EAAK,GAIVQ,EAAA,GACX,CAACf,IAEJU,EAAAA,WAAU,KACFN,MAAAA,EAAS7E,SAASyF,iBAAiB,iBACnCC,EAAgB,IAAIC,sBAAqB,CAACC,EAASC,KAC/CD,EAAA9D,SAAiBgE,IACvB,GAAIA,EAAMC,eAAgB,CACxB,MAAMC,EAAMF,EAAMG,OACdD,EAAAE,IAAMF,EAAInG,QAAQqG,KAAO,GAC7BF,EAAIG,gBAAgB,YACpBN,EAASO,UAAUJ,EAAG,IAEzB,IAII,OADPnB,EAAO/C,SAAQkE,GAAON,EAAcW,QAAQL,KACrC,IAAMN,EAAcY,YAAW,GACrC,CAACzB,IAEAE,QAEC,OAAIxH,UAAU,yCACbC,eAAC,MAAI,CAAAD,UAAU,4EAKjB0H,EAEC3H,EAAAA,IAAA,MAAA,CAAIC,UAAU,gCACZC,SACHyH,IAICJ,EAAO9H,OAURU,EAAAC,KAAA0G,WAAA,CAAA5G,SAAA,CAAAF,EAAAA,IAAC,OAAIC,UAAU,2DACZC,WAAOb,KAAI,CAAC4J,EAAO1J,IAClBY,EAAAC,KAAC8I,EAAOC,IAAP,CAEC/F,QAAS,CAAEgG,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,MAAe,GAARjK,GACrBU,UAAU,yEACVwJ,QAAS,IAAMnC,EAAiB2B,GAEhC/I,SAAA,GAACF,IAAA,MAAA,CAAIC,UAAU,wFACfE,EAAAH,IAAC,MAAA,CACC,WAAUiJ,EAAMS,UAChBC,IAAKV,EAAMW,OAAS,GAAGzC,QACvBlH,UAAU,wGACV4J,OAASC,IACKA,EAAEnB,OACVoB,UAAUC,OAAO,YAAW,IAGnCf,EAAMW,cACJ,MAAA,CAAI3J,UAAU,gIACbC,SAAA,CAAAF,EAAAA,IAAC,KAAG,CAAAC,UAAU,gDAAiDC,SAAA+I,EAAMW,QACpEX,EAAMgB,aACLjK,EAAAA,IAAC,KAAEC,UAAU,+FACVC,WAAM+J,mBAtBVhB,EAAMlH,UA+BjB/B,IAACsF,GACEpF,SACCmH,GAAAlH,EAAAH,IAACkJ,EAAOC,IAAP,CACC/F,QAAS,CAAEgG,QAAS,GACpBE,QAAS,CAAEF,QAAS,GACpBc,KAAM,CAAEd,QAAS,GACjBnJ,UAAU,sEACVwJ,QAAS,IAAMnC,EAAiB,MAEhCpH,SAAAC,EAAAC,KAAC8I,EAAOC,IAAP,CACC/F,QAAS,CAAE+G,MAAO,IAClBb,QAAS,CAAEa,MAAO,GAClBD,KAAM,CAAEC,MAAO,IACflK,UAAU,4BACVwJ,QAAcK,GAAAA,EAAEM,kBAEhBlK,SAAA,CAAAC,EAAAH,IAAC,SAAA,CACCC,UAAU,2EACVwJ,QAAS,IAAMnC,EAAiB,MAEhCpH,SAAAF,EAAAA,IAAC,OAAIqK,MAAM,6BAA6BpK,UAAU,UAAUqK,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eACjGtK,SAACF,EAAAA,IAAA,OAAA,CAAKyK,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,+BAGzE5K,IAAC,MAAI,CAAAC,UAAU,oDACbC,SAAAC,EAAAH,IAAC,MAAA,CACC4I,IAAKvB,EAAcqC,UACnBC,IAAKtC,EAAcuC,OAAS,GAAGzC,QAC/BlH,UAAU,mCAGboH,EAAcuC,cACZ,MAAA,CAAI3J,UAAU,kBACbC,SAAA,CAAAF,EAAAA,IAAC,KAAG,CAAAC,UAAU,yBAA0BC,SAAAmH,EAAcuC,QACrDvC,EAAc4C,aACbjK,EAAAA,IAAC,KAAEC,UAAU,qBAAsBC,WAAc+J,2BA7E9DjK,EAAAA,IAAA,MAAA,CAAIC,UAAU,mBAAmBC,SAElC,0CAqFN","x_google_ignoreList":[1,2,3,4]}