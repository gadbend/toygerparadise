{"version":3,"file":"galleryQueries-v0xrKYnN.js","sources":["../../src/lib/galleryQueries.ts"],"sourcesContent":["import { supabase } from './supabase';\nimport type { CatGalleryImage, GalleryImageInsert } from '../types/gallery';\n\nexport async function getGalleryImages(category?: 'toyger' | 'bengal'): Promise<CatGalleryImage[]> {\n  try {\n    console.log('Fetching images for category:', category); // Debug log\n    \n    const query = supabase\n      .from('cat_gallery')\n      .select('*');\n\n    if (category) {\n      query.eq('category', category.toLowerCase());\n    }\n\n    query.order('created_at', { ascending: false });\n\n    const { data, error } = await query;\n\n    if (error) {\n      console.error('Supabase error:', error); // Debug log\n      throw error;\n    }\n\n    console.log('Fetched data:', data); // Debug log\n    return data || [];\n  } catch (err) {\n    console.error('Error in getGalleryImages:', err);\n    throw err;\n  }\n}\n\nexport async function addGalleryImage(image: GalleryImageInsert): Promise<CatGalleryImage> {\n  const { data, error } = await supabase\n    .from('cat_gallery')\n    .insert([image])\n    .select()\n    .single();\n\n  if (error) {\n    throw error;\n  }\n\n  return data;\n}\n\nexport async function deleteGalleryImage(id: string): Promise<void> {\n  const { error } = await supabase\n    .from('cat_gallery')\n    .delete()\n    .eq('id', id);\n\n  if (error) {\n    throw error;\n  }\n}\n\nexport async function uploadGalleryImage(file: File): Promise<string> {\n  const fileExt = file.name.split('.').pop();\n  const fileName = `${Math.random().toString(36).substring(2)}.${fileExt}`;\n  const filePath = `gallery/${fileName}`;\n\n  const { error: uploadError } = await supabase.storage\n    .from('images')\n    .upload(filePath, file);\n\n  if (uploadError) {\n    throw uploadError;\n  }\n\n  const { data: { publicUrl } } = supabase.storage\n    .from('images')\n    .getPublicUrl(filePath);\n\n  return publicUrl;\n}\n"],"names":["async","getGalleryImages","category","query","supabase","from","select","eq","toLowerCase","order","ascending","data","error","err","addGalleryImage","image","insert","single","deleteGalleryImage","id","delete","uploadGalleryImage","file","fileExt","name","split","pop","filePath","Math","random","toString","substring","uploadError","storage","upload","publicUrl","getPublicUrl"],"mappings":"wCAGAA,eAAsBC,EAAiBC,GACjC,IAGF,MAAMC,EAAQC,EACXC,KAAK,eACLC,OAAO,KAENJ,GACFC,EAAMI,GAAG,WAAYL,EAASM,eAGhCL,EAAMM,MAAM,aAAc,CAAEC,WAAW,IAEvC,MAAMC,KAAEA,EAAAC,MAAMA,SAAgBT,EAE9B,GAAIS,EAEI,MAAAA,EAIR,OAAOD,GAAQ,SACRE,GAED,MAAAA,CAAA,CAEV,CAEAb,eAAsBc,EAAgBC,GACpC,MAAMJ,KAAEA,EAAMC,MAAAA,SAAgBR,EAC3BC,KAAK,eACLW,OAAO,CAACD,IACRT,SACAW,SAEH,GAAIL,EACI,MAAAA,EAGD,OAAAD,CACT,CAEAX,eAAsBkB,EAAmBC,GACvC,MAAMP,MAAEA,SAAgBR,EACrBC,KAAK,eACLe,SACAb,GAAG,KAAMY,GAEZ,GAAIP,EACI,MAAAA,CAEV,CAEAZ,eAAsBqB,EAAmBC,GACvC,MAAMC,EAAUD,EAAKE,KAAKC,MAAM,KAAKC,MAE/BC,EAAW,WADA,GAAGC,KAAKC,SAASC,SAAS,IAAIC,UAAU,MAAMR,OAGvDX,MAAOoB,SAAsB5B,EAAS6B,QAC3C5B,KAAK,UACL6B,OAAOP,EAAUL,GAEpB,GAAIU,EACI,MAAAA,EAGR,MAAQrB,MAAMwB,UAAEA,IAAgB/B,EAAS6B,QACtC5B,KAAK,UACL+B,aAAaT,GAET,OAAAQ,CACT"}