{"version":3,"file":"proxy-BSVoCzTG.js","sources":["../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/errors.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.17.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.17.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.17.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","current","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","usePresence","subscribe","context","useContext","isPresent","onExitComplete","register","id","useId","useEffect","safeToRemove","useCallback","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","noop","any","invariant","memo","callback","result","progress","from","to","value","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","has","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","forEach","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","i","length","frame","cancelFrame","frameSteps","requestAnimationFrame","LazyContext","strict","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","some","name","validMotionProps","isValidMotionProp","startsWith","shouldForward","isValidProp","require","default","_a","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","set","MotionContext","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","useCreateMotionContext","initial","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","motionComponentSymbol","Symbol","for","isRefObject","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","instance","mount","unmount","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","cancelMicrotask","queueMicrotask","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","options","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","children","jsx","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","renderHTML","element","style","vars","styleProp","assign","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isMotionValue","getVelocity","transformPropOrder","transformProps","scaleCorrectors","isForcedMotionValue","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","values","resolveVariantFromProps","definition","custom","velocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","target","valueTarget","createHtmlRenderState","transform","transformOrigin","createSvgRenderState","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","clamp","number","parse","parseFloat","alpha","scale","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","round","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","transformTemplate","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","tag","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","copyRawValuesOnly","source","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","shallowCompare","next","prev","prevLength","resolveVariant","getProps","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","finished","Promise","all","map","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","time","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","setupGesture","elementOrSelector","elements","Element","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","positionalKeys","clearTime","newTime","addUniqueItem","arr","item","push","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","MotionValue","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241]}